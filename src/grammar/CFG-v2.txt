Terminals:
for in range is while break continue def class pass with as from import if elif else raise // ** += -= *= /= **= //= %= , == < <= > >= != True False or and 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 ! " # $ % & ' - . / : < = > ? @ [ \ ] ^ _ ` { } ~
Variables:
START VAR VAL VVS VV PARAM PARAMETER FUNC ASSIGNMENT OPERAND OPERATOR RELATION EXPRESSION EXSTART ARRAY ISIDATA DICT ISIDICT IF ELIF ELSE FOR BC BREAK CONTINUE RAISE WHILE IMPORT WITH DEF CLASS BEBAS STRING VCLASS VDEF VRETURN VPASS
Productions:
START -> START START | VAR ASSIGNMENT VV | VAR = ISIDATA | VAR ASSIGNMENT OPERATOR | VAR ASSIGNMENT EXPRESSION | IF | FOR | WHILE | IMPORT | DEF | CLASS | WITH | STRING | PARAM = PARAM;
VAR -> BEBAS;
VAL -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | VAL VAL | VAL _ VAL;
VVS -> VV | STRING;
VV -> VAL | VAR;
PARAM -> VVS | PARAM , PARAM | ARRAY | DICT | PARAMETER;
PARAMETER -> ( PARAM ) | ( PARAMETER ) | ( );
FUNC -> VAR PARAMETER;
ASSIGNMENT -> = | += | -= | /= | *= | **= | //= | %=;
OPERATOR -> VV OPERAND VV;
OPERAND -> + | - | * | ** | / | // | %;
RELATION -> == | < | <= | > | >= | !=;
EXPRESSION -> VV RELATION VV | True | False;
ARRAY -> [ ] | [ ISIDATA ];
ISIDATA -> PARAM | PARAMETER | ISIDATA , ISIDATA;
DICT -> { } | { ISIDICT };
ISIDICT -> ISIDATA : ISIDATA | ISIDICT , ISIDICT;
BC -> BREAK | CONTINUE | BC BC;
BREAK -> break;
CONTINUE -> continue;
VCLASS -> class;
CLASS -> VCLASS VAR : START | VCLASS VAR : pass | VCLASS VAR : START pass;
BEBAS -> BEBAS BEBAS | a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | ! | " | # | $ | % | & | ' | - | . | / | : | < | = | > | ? | @ | [ | \ | ] | ^ | _ | ` | { | } | ~;
STRING -> " BEBAS " | ' BEBAS ' | " " " BEBAS " " " | ' ' ' BEBAS ' ' '