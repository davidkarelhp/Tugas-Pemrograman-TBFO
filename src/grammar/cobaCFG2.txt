Terminals:
if elif else ( ) " ' : for in while break continue import from as def class with open True False not = == ! != > >= < <= or and + - * / % ** // is raise
Variables:
S IF ELIF ELSE EXPRESSION STRING FOR WHILE INSIDELOOP IMPORT FROM DEF CLASS WITH A BOOL RELATION RELATION0 OPERAND OPERAND0 OPERATOR S0 RAISE
Productions:
S -> S S | IF ELIF | IF | IF ELSE | EXPRESSION | FOR | WHILE | IMPORT | FROM | DEF | CLASS | WITH | " A " | ' A ' | " " " A " " " | ' ' ' A ' ' ' | BOOL | OPERATOR | S0 | RAISE;
A -> A A | IF ELIF | IF | IF ELSE | EXPRESSION | FOR | WHILE | IMPORT | FROM | DEF | CLASS | WITH;
EXPRESSION -> ( EXPRESSION ) | EXPRESSION EXPRESSION | " EXPRESSION " | ' EXPRESSION ' | " " " EXPRESSION " " " | ' ' ' EXPRESSION ' ' ';
IF -> if BOOL : S;
ELIF -> elif BOOL : S | elif BOOL : S ELIF | elif BOOL : S ELSE;
ELSE -> else : S;
FOR -> for EXPRESSION in EXPRESSION : INSIDELOOP | FOR EXPRESSION in range ( EXPRESSION ) : INSIDELOOP;
WHILE -> while BOOL : INSIDELOOP;
INSIDELOOP -> break | continue | S | INSIDELOOP INSIDELOOP;
IMPORT -> import EXPRESSION | import EXPRESSION as EXPRESSION;
FROM -> from EXPRESSION IMPORT;
DEF -> def EXPRESSION ( EXPRESSION ) : S;
CLASS -> class EXPRESSION : S | class EXPRESSION ( EXPRESSION ) : S;
WITH -> with open ( EXPRESSION ) as EXPRESSION : S;
BOOL -> True | False | EXPRESSION | BOOL RELATION BOOL | not BOOL | ( BOOL );
RELATION -> = RELATION0 | ! RELATION0 | > | > RELATION0 | < | < RELATION0 | or | and | not in | is;
RELATION0 -> =;
OPERAND -> + | - | * | / | % | * OPERAND0 | / OPERAND1;
OPERAND0 -> *;
OPERAND1 -> /;
OPERATOR -> EXPRESSION | OPERATOR OPERAND OPERATOR;
S0 -> S0 = S0 | S0 S0 | EXPRESSION | OPERATOR;
RAISE -> raise EXPRESSION